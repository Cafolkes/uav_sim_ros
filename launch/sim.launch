<?xml version="1.0"?>
<launch>
  <env name="GAZEBO_RESOURCE_PATH" value="$(find uav_sim_ros)/gazebo" />
  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="extra_gazebo_args" default=""/>
  <arg name="gui" default="true"/>
  <arg name="recording" default="false"/>
  <!-- Note that 'headless' is currently non-functional.  See gazebo_ros_pkgs issue #491 (-r arg does not disable
       rendering, but instead enables recording). The arg definition has been left here to prevent breaking downstream
       launch files, but it does nothing. -->
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="physics" default="ode"/>
  <arg name="verbose" default="false"/>
  <arg name="world_name" default="World/sim.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
  <arg name="respawn_gazebo" default="false"/>
  <arg name="use_clock_frequency" default="false"/>
  <arg name="pub_clock_frequency" default="100"/>

  <!-- set use_sim_time flag -->
  <param name="/use_sim_time" value="$(arg use_sim_time)"/>

  <!-- set command arguments -->
  <arg unless="$(arg paused)" name="command_arg1" value=""/>
  <arg     if="$(arg paused)" name="command_arg1" value="-u"/>
  <arg unless="$(arg recording)" name="command_arg2" value=""/>
  <arg     if="$(arg recording)" name="command_arg2" value="-r"/>
  <arg unless="$(arg verbose)" name="command_arg3" value=""/>
  <arg     if="$(arg verbose)" name="command_arg3" value="--verbose"/>
  <arg unless="$(arg debug)" name="script_type" value="gzserver"/>
  <arg     if="$(arg debug)" name="script_type" value="debug"/>

<!--   <node pkg="joy" type="joy_node" name="joy_node">
    <param name="dev" value="/dev/input/js0" />
    <param name="autorepeat_rate" value="50.0" />
  </node> -->

  <!-- start gazebo server-->
  <group if="$(arg use_clock_frequency)">
    <param name="gazebo/pub_clock_frequency" value="$(arg pub_clock_frequency)" />
  </group>
  <node name="gazebo" pkg="gazebo_ros" type="$(arg script_type)" respawn="$(arg respawn_gazebo)" output="screen"
	args="$(arg command_arg1) $(arg command_arg2) $(arg command_arg3) -e $(arg physics) $(arg extra_gazebo_args) $(arg world_name)" />

  <!-- start gazebo client -->
  <group if="$(arg gui)">
    <node name="gazebo_gui" pkg="gazebo_ros" type="gzclient" respawn="false" output="screen" args="$(arg command_arg3)"/>
  </group>

  <node name="spawn_uav" pkg="gazebo_ros" type="spawn_model" args="-file $(find uav_sim_ros)/gazebo/URDF/amberuav.urdf -urdf -model uav" />

  <node name="spawn_mine" pkg="gazebo_ros" type="spawn_model" args="-file $(find uav_sim_ros)/gazebo/URDF/mine.urdf -urdf -x -100 -y 224 -model mine" />

  <node name="spawn_floor" pkg="gazebo_ros" type="spawn_model" args="-file $(find uav_sim_ros)/gazebo/URDF/ground_plane.sdf -sdf -model floor -z -1.5" />

  <node name="spawn_ceil" pkg="gazebo_ros" type="spawn_model" args="-file $(find uav_sim_ros)/gazebo/URDF/ground_plane.sdf -sdf -model ceil -z 1.5" />

  <node pkg="tf2_ros" type="static_transform_publisher" name="mine_broadcaster" args="-100 224 0 0 0 0 world mine" />

  <arg name="uav_model" default="$(find uav_sim_ros)/gazebo/URDF/amberuav.urdf"/>
  <arg name="cave_model" default="$(find uav_sim_ros)/gazebo/URDF/mine.urdf"/>

  <param name="uav_description" command="$(find xacro)/xacro --inorder $(arg uav_model)" />
  <param name="cave_description" command="$(find xacro)/xacro --inorder $(arg cave_model)" />

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="uav_st_pub" >
      <remap from="robot_description" to="uav_description" />
      <param name="publish_frequency" value="1000" />
  </node>

<!--     <node pkg="joint_state_publisher" type="joint_state_publisher" name="uav_jt_pub" >
      <remap from="robot_description" to="uav_description" />
      <param name="rate" value="500" />
  </node> -->

</launch>
